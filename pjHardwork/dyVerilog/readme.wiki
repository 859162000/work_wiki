
file list:
dyVerilog.rst
dyVerilog.py
python/dyTool.py
python/exam.py
[[python/readme]]

= 设计准则 =
- 当下一级无响应时，向下下级发出唤醒信息。

地址从1开始。
= 数字与字符编码 =
数据直接用二进制翻译

| Num | 编码     | 16bit | 操作符 | 说明    |   |   |
|-----|----------|-------|--------|---------|---|---|
| 1   | 11000000 | c0    | 加     | +       |   |   |
| 2   | 11000001 | c1    | 减     | -       |   |   |
| 3   | 11000010 | c2    | 乘     | *       |   |   |
| 4   | 11000011 | c3    | 除     | /       |   |   |
| 5   | 11000100 | c4    | 正     | +       |   |   |
| 6   | 11000101 | c5    | 负     | -       |   |   |
| 7   | 11000110 | c6    | 大     | >       |   |   |
| 8   | 11000111 | c7    | 小     | <       |   |   |
| 9   | 11001000 | c8    | 等     | ==      |   |   |
| 10  | 11001001 | c9    | 非     | !=      |   |   |
| 11  | 11001010 | c10   | 余     | 余数    |   |   |
| 12  | 11001011 | c11   | 点     | 小数点. |   |   |
| 13  | 11001100 | c12   | 分     | 分式    |   |   |
| 14  | 11001101 | c13   |        |         |   |   |
| 15  | 11001110 | c14   |        |         |   |   |
| 16  | 11001111 | c15   |        |         |   |   |


相关性：寄存器有一个状态，1代表有效，0代表无用。有效，则其它指令不能对其进行写操作，无用则可写。用于编译有效性检察？或运行时检察。
寄存器有行号，对其进行读操作时，判断指令中的行号与寄存器的行号是否相同。其作用是，读相关指令数据有效性。
寄存器有进程号，不同的进程间，不能相互覆盖。
= 模块 =
寄存器
regfile.py
= 查表加法器 =
tableAdder.v
= 基本思想 =
计算机是为了强化计算的。所以目前计算机的数据表达是以2进制为基本的，处理方式是计算逻辑。

所有的信息都是字符串。数字也是字符串。人在传递信息时，使用文字，而非人脑的存储。计算与表达之间，有一层转换过程。计算机也是如此。
在计算机内部，只有01的操作。所有的表达，都是通过输入与输出系统完成。则计算机基本结构：输入，运算，输出。

计算机基本原理是可计算性，基本原型是图灵机。

# 高可靠性处理器：三组单元复合，得到一个结果；反馈结果。
# 地址0内存储的内容不可靠。
# 每一拍，从取指到结果存储
# 反馈结构：通过反馈结果，指示下一指令发射

= 指令寄存器堆结构 =
增加一列移位寄存器。寄存器只有一个高电平，用来选择指令行。每拍自动向后移位。当遇到跳转指令时，计算绝对地址，进行地址译码。

= 指令 =
加 减 乘 除
正跳
反跳
裸跳
加载、停止、复位

| 操作  （操作符） | 结果地址 | 源       | 源     | 备注                            |
|------------------|----------|----------|--------|---------------------------------|
| 运算  算术运算   | 寄存器   | 寄存器   | 寄存器 |                                 |
| 跳转  条件运算   | 命令行号 | 寄存器   | 寄存器 |                                 |
| 移动             | 寄存器   | 数1      | 数2    | 将数1、数2 存在连续的寄存器中。 |
| 加载             | 命令行号 | 内存地址 | 长度   | 定长、绝址                      |
| 存储             | 内存地址 | 寄、数   | 长度   | 定长、绝址                      |
| 读取             | 内存地址 | 硬盘地址 | 长度   |                                 |
| 保存             | 硬盘地址 | 内存地址 | 长度   |                                 |
