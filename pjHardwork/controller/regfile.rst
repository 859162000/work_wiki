========
寄存器堆
========

寄存器堆的功能是按地址写入数据，按地址读取数据。
工作状态有两种：写入数据，读取数据；状态互斥。

在输入端口，缓存所有输入信号，存储一拍。
在输出端口，缓存读取数据，存储一拍。

寻址
====
行地址长度等于单个字符编码长度，只能表示0~9，
要表示更多地址，需要更多连续行地址。
假设寄存器大小为1000行，则需要连续3个行地址才能表示。
在ASCII编码中，0~9中，只有低四位码有变化。因此可以将两位数简化表示：
在作为地址时，每位数只取低四位，将连续两位数合并，则8位数表示100位地址，
增加了一倍的地址空间，不到二进制编码寻址的一半。

端口定义
========

==========  ==================================================
名称        说明
==========  ==================================================
状态控制    1:write 0:read 切换工作状态
行地址      指示当前行
入口数据    用于写入存储的数据
出口数据    当前行地址的数据
==========  ==================================================
复位        0:Yes 行地址到首行
时钟        时钟
==========  ==================================================

端口声明
--------

==========  =================  ======  ======
名称        变量名             方向    位长  
==========  =================  ======  ======
状态控制    state_control      i       1     
行地址      address            i       8     
入口数据    input_data         i       8     
出口数据    output_data        o       8     
==========  =================  ======  ======
复位        rst_n              i       1     
时钟        clk                i       1
==========  =================  ======  ======


物理实现
========

